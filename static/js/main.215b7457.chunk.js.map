{"version":3,"sources":["Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.styled.jsx","App.jsx","index.js"],"names":["FormContact","styled","form","Label","label","Input","input","Btn","button","ContactForm","type","name","pattern","title","required","Component","List","li","Text","p","ContactList","contacts","onContactDelete","map","id","number","onClick","ContainerPhonebook","div","ContainerContacts","App","state","filter","findContactByName","evt","query","currentTarget","value","setState","deleteContacts","contactId","prevState","cont","this","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAEaA,EAAcC,IAAOC,KAAV,mMAUXC,EAAQF,IAAOG,MAAV,4KASLC,EAAQJ,IAAOK,MAAV,uKAULC,EAAMN,IAAOO,OAAV,2T,OCKDC,E,4JAhCb,WACE,OACE,mCACE,eAACT,EAAD,WACE,eAACG,EAAD,kBAEE,cAACE,EAAD,CACEK,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,eAACX,EAAD,oBAEE,cAACE,EAAD,CACEK,KAAK,MACLC,KAAK,SACLC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACP,EAAD,CAAKG,KAAK,SAAV,kC,GA1BgBK,aCDbC,EAAOf,IAAOgB,GAAV,gKAUJV,EAAMN,IAAOO,OAAV,wTAcHU,EAAOjB,IAAOkB,EAAV,kFCVFC,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,KAAMc,EAAb,EAAaA,OAAb,OACZ,eAACT,EAAD,WACE,cAACE,EAAD,UAAOP,IACP,cAACO,EAAD,UAAOO,IACP,cAAC,EAAD,CAAKC,QAAS,kBAAMJ,EAAgBE,IAApC,sBAHSA,SCLJG,EAAqB1B,IAAO2B,IAAV,mGAMlBC,EAAoB5B,IAAO2B,IAAV,yEC+CfE,E,4MAhDbC,MAAQ,CACNV,SAAU,CACR,CAAEG,GAAI,OAAQb,KAAM,gBAAiBc,OAAQ,aAC7C,CAAED,GAAI,OAAQb,KAAM,iBAAkBc,OAAQ,aAC9C,CAAED,GAAI,OAAQb,KAAM,gBAAiBc,OAAQ,aAC7C,CAAED,GAAI,OAAQb,KAAM,iBAAkBc,OAAQ,cAEhDO,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClB,IAAMC,EAAQD,EAAIE,cAAcC,MAChC,EAAKC,SAAS,CAAEN,OAAQG,K,EAI1BI,eAAiB,SAAAC,GACf,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BpB,SAAUoB,EAAUpB,SAASW,QAAO,SAAAU,GAAI,OAAIA,EAAKlB,KAAOgB,U,4CAI5D,WACE,IAAQnB,EAAasB,KAAKZ,MAAlBV,SACR,OACE,qCACE,eAACM,EAAD,WACE,2CACA,cAAC,EAAD,OAGF,eAACE,EAAD,WACE,0CAEA,+BACE,0DAEE,uBAAOnB,KAAK,OAAO2B,MAAOM,KAAKZ,MAAMC,OAAQY,SAAUD,KAAKV,yBAIhE,cAAC,EAAD,CAAaZ,SAAUA,EAAUC,gBAAiBqB,KAAKJ,2B,GA1C/CxB,aCAlB8B,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,W","file":"static/js/main.215b7457.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  border: 2px solid black;\r\n  width: 560px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  border-radius: 6px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  font-weight: 700;\r\n  margin-left: 15px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nwidth: 250px;\r\nborder: 1px solid black;\r\nborder-radius: 4px;\r\npadding: 15px 16px;\r\nmargin-top: 15px;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\ndisplay: inline-block;\r\ncolor: black;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\npadding: 10px 30px;\r\noutline: none;\r\nborder-style: solid none;\r\nborder-color: #fdbe33 #000 #d77206;\r\nborder-radius: 6px;\r\nbackground: linear-gradient(#f3ae0f, #e38916) #e38916;\r\nmargin: auto;\r\ncursor: pointer;\r\n`;","import React, { Component } from 'react';\r\nimport { FormContact, Label, Input, Btn } from './ContactForm.styled';\r\n\r\nclass ContactForm extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormContact>\r\n          <Label>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </Label>\r\n\r\n          <Label>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </Label>\r\n          <Btn type=\"submit\">Add contact</Btn>\r\n        </FormContact>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.li`\r\ndisplay: flex;\r\nflex-direction: row;\r\naline-item: start;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\npadding: 5px 5px;\r\nmargin: 5px 5px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\ndisplay: inline-block;\r\ncolor: black;\r\nfont-weight: 600;\r\nfont-size: 16px;\r\npadding: 2px 12px 2px 12px;\r\nborder-style: solid none;\r\nborder-color: #fdbe33 #000 #d77206;\r\nborder-radius: 6px;\r\nbackground: linear-gradient(#f3ae0f, #e38916) #e38916;\r\nmargin-left: 25px;\r\ncursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.p`\r\nmargin: 0px;\r\nmargin-left: 15px;\r\naline-item: start;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { List, Btn, Text } from './ContactList.styled'\r\n\r\n\r\nconst ContactList = ({ contacts, onContactDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <List key={id}>\r\n        <Text>{name}</Text>\r\n        <Text>{number}</Text>\r\n        <Btn onClick={() => onContactDelete(id)}>Delete</Btn>\r\n      </List>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContainerPhonebook = styled.div`\r\n  display: inline-block;\r\n  padding: 20px 10px;\r\n  margin-left: 50px;\r\n`;\r\n\r\nexport const ContainerContacts = styled.div`\r\n  padding: 20px 10px;\r\n  margin-left: 50px;\r\n`;\r\n","import React, { Component } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'Components/ContactForm';\nimport ContactList from 'Components/ContactList';\nimport { ContainerPhonebook, ContainerContacts } from 'App.styled';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  findContactByName = evt => {\n    const query = evt.currentTarget.value;\n    this.setState({ filter: query });\n    // console.log(query)\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(cont => cont.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <ContainerPhonebook>\n          <h1>Phonebook</h1>\n          <ContactForm />\n        </ContainerPhonebook>\n\n        <ContainerContacts>\n          <h2>Contacts</h2>\n\n          <form>\n            <label>\n              Find contacts by name\n              <input type=\"text\" value={this.state.filter} onChange={this.findContactByName} />\n            </label>\n          </form>\n\n          <ContactList contacts={contacts} onContactDelete={this.deleteContacts} />\n        </ContainerContacts>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}