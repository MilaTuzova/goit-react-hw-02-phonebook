{"version":3,"sources":["Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","App.styled.jsx","App.jsx","index.js"],"names":["FormContact","styled","form","Label","label","Input","input","Btn","button","ContactForm","state","name","number","id","nameId","uuidv4","numberId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","autoComplete","pattern","title","required","onChange","Component","List","li","Text","p","ContactList","contacts","onContactDelete","map","onClick","Filter","filter","onContactFind","Container","div","App","contactsData","formSubmitHandler","newContact","find","contact","alert","deleteContacts","contactId","prevState","cont","findContactByName","getVisibleContact","normalizeFilter","toLowerCase","includes","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ikBAEaA,EAAcC,IAAOC,KAAV,mMAUXC,EAAQF,IAAOG,MAAV,4KASLC,EAAQJ,IAAOK,MAAV,uKAULC,EAAMN,IAAOO,OAAV,2T,OCoCDC,E,4MA9DbC,MAAQ,CAAEC,KAAM,GAAIC,OAAQ,GAAIC,GAAI,I,EAEpCC,OAASC,c,EACTC,SAAWD,c,EAEXE,aAAe,SAAAC,GAEb,MAAwBA,EAAIC,cAApBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAIK,iBAEJ,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,mCACE,eAACZ,EAAD,CAAayB,SAAUE,KAAKL,aAA5B,UACE,eAACnB,EAAD,CAAOyB,QAASD,KAAKb,OAArB,iBAEE,cAACT,EAAD,CACEwB,KAAK,OACLlB,KAAK,OACLS,MAAOO,KAAKjB,MAAMC,KAClBmB,aAAa,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKV,aACfJ,GAAIc,KAAKb,YAIb,eAACX,EAAD,CAAOyB,QAASD,KAAKX,SAArB,mBAEE,cAACX,EAAD,CACEwB,KAAK,MACLlB,KAAK,SACLS,MAAOO,KAAKjB,MAAME,OAClBkB,aAAa,MACbC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKV,aACfJ,GAAIc,KAAKX,cAGb,cAACT,EAAD,CAAKsB,KAAK,SAAV,kC,GAxDgBM,aCFbC,EAAOnC,IAAOoC,GAAV,gKAUJ9B,EAAMN,IAAOO,OAAV,wTAcH8B,EAAOrC,IAAOsC,EAAV,kFCVFC,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAG9B,EAAH,EAAGA,GAAIF,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACwB,EAAD,WACE,cAACE,EAAD,UAAO3B,IACP,cAAC2B,EAAD,UAAO1B,IACP,cAAC,EAAD,CAAKgC,QAAS,kBAAMF,EAAgB7B,IAApC,sBAHSA,SCLJV,EAAQF,IAAOG,MAAV,wGAOLC,EAAQJ,IAAOK,MAAV,yKCGHuC,EATA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,cAAX,OACb,8BACE,eAAC,EAAD,mCAEE,cAAC,EAAD,CAAOlB,KAAK,OAAOT,MAAO0B,EAAQZ,SAAUa,UCLrCC,EAAY/C,IAAOgD,IAAV,kD,QC2DPC,E,4MApDbxC,MAAQ,CACN+B,SAAUU,EACVL,OAAQ,I,EAGVM,kBAAoB,YAAuB,IACnCC,EAAa,CAAE1C,KADmB,EAAnBA,KACMC,OADa,EAAbA,OACQC,GAAIE,eAClB,EAAKL,MAAlB+B,SAEqBa,MAAK,SAAAC,GAAO,OAAIA,EAAQ5C,OAAS0C,EAAW1C,QAGrE6C,MAAM,GAAD,OAAIH,EAAW1C,KAAf,6BACL,EAAKU,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEY,GAAH,mBAAkBZ,S,EAIlCgB,eAAiB,SAAAC,GACf,EAAKrC,UAAS,SAAAsC,GAAS,MAAK,CAC1BlB,SAAUkB,EAAUlB,SAASK,QAAO,SAAAc,GAAI,OAAIA,EAAK/C,KAAO6C,U,EAI5DG,kBAAoB,SAAA3C,GAClB,EAAKG,SAAS,CAAEyB,OAAQ5B,EAAIC,cAAcC,S,EAG5C0C,kBAAoB,WAClB,MAA6B,EAAKpD,MAA1BoC,EAAR,EAAQA,OAAQL,EAAhB,EAAgBA,SACVsB,EAAkBjB,EAAOkB,cAE/B,OAAOvB,EAASK,QAAO,SAAAS,GAAO,OAAIA,EAAQ5C,KAAKqD,cAAcC,SAASF,O,4CAGxE,WACE,IAAQjB,EAAWnB,KAAKjB,MAAhBoC,OACFoB,EAAiBvC,KAAKmC,oBAE5B,OACE,eAACd,EAAD,WACE,2CACA,cAAC,EAAD,CAAavB,SAAUE,KAAKyB,oBAE5B,0CACA,cAAC,EAAD,CAAQN,OAAQA,EAAQC,cAAepB,KAAKkC,oBAC5C,cAAC,EAAD,CAAapB,SAAUyB,EAAgBxB,gBAAiBf,KAAK8B,wB,GA/CnDtB,aCFlBgC,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,W","file":"static/js/main.ad7d0c27.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  border: 2px solid black;\r\n  width: 560px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  border-radius: 6px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  font-weight: 700;\r\n  margin-left: 15px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nwidth: 250px;\r\nborder: 1px solid black;\r\nborder-radius: 4px;\r\npadding: 15px 16px;\r\nmargin-top: 15px;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\ndisplay: inline-block;\r\ncolor: black;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\npadding: 10px 30px;\r\noutline: none;\r\nborder-style: solid none;\r\nborder-color: #fdbe33 #000 #d77206;\r\nborder-radius: 6px;\r\nbackground: linear-gradient(#f3ae0f, #e38916) #e38916;\r\nmargin: auto;\r\ncursor: pointer;\r\n`;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FormContact, Label, Input, Btn } from './ContactForm.styled';\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '', id: '' };\r\n\r\n  nameId = uuidv4();\r\n  numberId = uuidv4();\r\n\r\n  handleChange = evt => {\r\n    // console.log(evt.currentTarget.value);\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormContact onSubmit={this.handleSubmit}>\r\n          <Label htmlFor={this.nameId}>\r\n            Name\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              autoComplete=\"off\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n              id={this.nameId}\r\n            />\r\n          </Label>\r\n\r\n          <Label htmlFor={this.numberId}>\r\n            Number\r\n            <Input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              autoComplete=\"off\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n              id={this.numberId}\r\n            />\r\n          </Label>\r\n          <Btn type=\"submit\">Add contact</Btn>\r\n        </FormContact>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.li`\r\ndisplay: flex;\r\nflex-direction: row;\r\naline-item: start;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\npadding: 5px 5px;\r\nmargin: 5px 5px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\ndisplay: inline-block;\r\ncolor: black;\r\nfont-weight: 600;\r\nfont-size: 16px;\r\npadding: 2px 12px 2px 12px;\r\nborder-style: solid none;\r\nborder-color: #fdbe33 #000 #d77206;\r\nborder-radius: 6px;\r\nbackground: linear-gradient(#f3ae0f, #e38916) #e38916;\r\nmargin-left: 25px;\r\ncursor: pointer;\r\n`;\r\n\r\nexport const Text = styled.p`\r\nmargin: 0px;\r\nmargin-left: 15px;\r\naline-item: start;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { List, Btn, Text } from './ContactList.styled'\r\n\r\n\r\nconst ContactList = ({ contacts, onContactDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <List key={id}>\r\n        <Text>{name}</Text>\r\n        <Text>{number}</Text>\r\n        <Btn onClick={() => onContactDelete(id)}>Delete</Btn>\r\n      </List>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\nfont-weight: 700;\r\nfont-size: 20px;\r\ndisplay: inline;\r\npaddinf: 15px 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nwidth: 260px;\r\nborder: 1px solid black;\r\nborder-radius: 4px;\r\npadding: 10px 10px;\r\nmargin: 10px 10px;\r\nfont-weight: 700;\r\nfont-size: 18px;\r\n;`","import React from 'react';\r\nimport { Label, Input } from './Filter.styled';\r\n\r\nconst Filter = ({ filter, onContactFind }) => (\r\n  <div>\r\n    <Label>\r\n      Find contacts by name\r\n      <Input type=\"text\" value={filter} onChange={onContactFind} />\r\n    </Label>\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  margin-left: 50px;\r\n`;\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from 'Components/ContactForm';\nimport ContactList from 'Components/ContactList';\nimport Filter from 'Components/Filter';\nimport { Container } from 'App.styled';\nimport contactsData from './data/data.json';\n\nclass App extends Component {\n  state = {\n    contacts: contactsData,\n    filter: '',\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const newContact = { name, number, id: uuidv4() };\n    const { contacts } = this.state;\n\n    const findContact = contacts.find(contact => contact.name === newContact.name);\n\n    findContact\n      ? alert(`${newContact.name} is already in contacts!`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(cont => cont.id !== contactId),\n    }));\n  };\n\n  findContactByName = evt => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getVisibleContact();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onContactFind={this.findContactByName} />\n        <ContactList contacts={visibleContact} onContactDelete={this.deleteContacts} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}